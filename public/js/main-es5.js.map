{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/post-dialog/post-dialog.component.ts","webpack:///src/app/post-dialog/post-dialog.component.html","webpack:///src/app/post.service.ts","webpack:///src/app/post.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","dialog","postService","title","posts","dialogRef","open","width","afterClosed","subscribe","result","save","post","archive","openDialog","selector","templateUrl","styleUrls","AppModule","provide","useValue","declarations","entryComponents","providers","bootstrap","PostDialogComponent","archiveName","data","event","target","files","name","close","changeFile","cancel","PostService","http","get","p","push","subtitle","email","message","likes","file","uploadData","FormData","append","reportProgress","observe","type","Response","body","UploadProgress","console","log","providedIn","Post","PostComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n  public posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService\n    ){}\n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent,{\n      width:'700px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result)=>{\n        if (result){\n          this.postService.save(result.post, result.archive);\n        }\n      }\n    );\n  }\n}\n","<mat-toolbar class=\"toolbar\">\n    <span>Projeto: Laravel/Angular</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\" >\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n\n<button mat-fab class=\"float-button\" (click)=\"openDialog()\">\n    <mat-icon>add</mat-icon>\n</button>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button'; \nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatCardModule } from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    HttpClientModule,\n\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  entryComponents: [\n    PostDialogComponent,\n  ],\n  providers: [\n    {provide: APP_BASE_HREF, useValue: '/resources/assets/meuapp'},\n    PostService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public archiveName: string='';\n  public data = {\n    post: new Post(\"\",\"\",\"\",\"\",\"\",\"\"),\n    archive: null\n  }\n  constructor(\n    public dialogRef: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  changeFile(event)\n  {\n    // console.log(event.target.files[0]);\n    this.archiveName = event.target.files[0].name;\n    this.data.archive = event.target.files[0];\n  }\n\n  save()\n  {\n    this.dialogRef.close(this.data);\n  }\n\n  cancel()\n  {\n    this.dialogRef.close(null)\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n      <mat-form-field fxFlex=\"40\">\n        <input matInput placeholder=\"Nome:\" [(ngModel)]=\"data.post.name\">\n        <mat-hint>Digite seu nome</mat-hint>\n      </mat-form-field>\n\n      <mat-form-field fxFlex=\"50\">\n        <input matInput placeholder=\"Email:\" [(ngModel)]=\"data.post.email\">\n        <mat-hint>Digite seu email</mat-hint>\n      </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n      <mat-form-field fxFlex=\"40\">\n        <input matInput placeholder=\"Titulo:\" [(ngModel)]=\"data.post.title\">\n      </mat-form-field>\n\n      <mat-form-field fxFlex=\"50\">\n        <input matInput placeholder=\"Subtitulo:\" [(ngModel)]=\"data.post.subtitle\">\n      </mat-form-field>\n    </div>\n    <mat-form-field>\n      <textarea matInput placeholder=\"Deixe aqui a sua mensagem...\" [(ngModel)]=\"data.post.message\"></textarea>\n    </mat-form-field>\n  </div>\n\n    <input type=\"file\" style=\"display:none;\" \n      (change)=\"changeFile($event)\" #fileInput>\n\n    <button mat-stroked-button (click)=\"fileInput.click()\">\n        <mat-icon>\n          add_photo_alternate\n        </mat-icon>\n        Adicionar Fotos\n    </button>\n    <br>\n    <p *ngIf=\"archiveName!=''\">\n      <strong>Arquivo: </strong>{{archiveName}}\n      <mat-icon color=\"link\">done</mat-icon>\n    </p>\n\n    <div class=\"buttons\">\n        <button mat-stroked-button class=\"save\" (click)=\"save()\">Salvar</button>\n        <button mat-stroked-button class='cancel' (click)=\"cancel()\">Cancelar</button>\n    </div>\n ","import {\n  Injectable\n} from '@angular/core';\nimport {\n  Post\n} from './post';\nimport {\n  HttpClient,\n  HttpEvent,\n  HttpEventType\n} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.http.get('/api/').subscribe(\n      (posts: any[]) => {\n        for (let p of posts) {\n          this.posts.push(\n            new Post(\n              p.name, p.title, p.subtitle, p.email,\n              p.message, p.archive, p.id, p.likes\n            )\n          );\n        }\n      }\n    );\n  }\n\n  save(post: Post, file: File) {\n    const uploadData = new FormData();\n    uploadData.append('name', post.name);\n    uploadData.append('email', post.email);\n    uploadData.append('title', post.title);\n    uploadData.append('subtitle', post.subtitle);\n    uploadData.append('message', post.message);\n    uploadData.append('archive', file, file.name);\n\n    this.http.post(\"/api/\", uploadData,\n      {reportProgress: true, observe:'events'})\n      .subscribe((event: any) => {\n        if (event.type == HttpEventType.Response) {\n          // console.log(event);\n          let p: any = event.body;\n            this.posts.push(\n              new Post(\n                p.name, p.title, p.subtitle, p.email,\n                p.message, p.archive, p.id, p.likes\n              )\n            );\n          }\n\n        if (event.type == HttpEventType.UploadProgress) {\n          console.log('UploadProgress');\n          console.log(event);\n        }\n      })\n  }\n}\n","export class Post{\n    \n    constructor(\n        public name:string,\n        public title:string,\n        public subtitle:string,\n        public email:string,\n        public message:string,\n        public archive?:string,\n        public id?:number,\n        public likes?:number\n    ){}\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  @Input() post: Post;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card fxFlex class=\"card\"> \n    <mat-card-header>\n      <mat-card-title>{{post.title}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitle}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.archive}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.message}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button>LIKE</button>\n      <button mat-button>SHARE</button>\n    </mat-card-actions>\n  </mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}